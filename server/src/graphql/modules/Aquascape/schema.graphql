# import User from '../User/schema.graphql'
# import Filter from '../Filter/schema.graphql'
# import Light from '../Light/schema.graphql'
# import Plant from '../Plant/schema.graphql'
# import Hardscape from '../Hardscape/schema.graphql'

type CO2 {
    id: Int!
    type: String
    bps: Int
}

type Like {
    id: Int!
    user: User!
}

type AquascapeImage {
    id: Int!
    title: String
    description: String
    url: String!
}

type Substrate {
    id: Int!
    brand: String
    name: String!
    description: String
    image: String
}

type Additive {
    id: Int!
    brand: String
    name: String
    description: String
    image: String
}

type Tag {
    id: Int!
    predefined: Boolean!
    name: String!
}

type Livestock {
    id: Int!
    name: String!
    description: String
    image: String
}

type Filter {
    id: Int!
    brand: String!
    model: String!
    description: String
    image: String
}

type Tank {
    id: Int!
    brand: String
    model: String
    volume: Float
    width: Float
    height: Float
    depth: Float
    glassThickness: Float
}

type User {
    aquascapes(pagination: Pagination!, random: Boolean): AquascapesResult!
}

type Aquascape {
    id: Int!
    createdAt: String!
    updatedAt: String!
    title: String!
    featured: Boolean!
    trending: Boolean!
    slug: String!
    description: String
    userId: Int!
    user: User
    co2: CO2
    tank: Tank
    photoperiod: Int!
    mainImage: String
    images: [AquascapeImage!]
    viewsCount: Int!
    tags: [Tag!]!
    plants: [Plant!]!
    hardscape: [Hardscape!]!
    livestock: [Livestock!]!
    filters: [Filter!]!
    lights: [Light!]!
    substrates: [Substrate!]!
    additives: [Additive!]!
}

input Pagination {
    limit: Int!
    cursor: String
}

input AquascapesFilter {
    trending: Boolean
}

type AquascapesResult {
    rows: [Aquascape!]!
    count: Int!
}

type Query {
    aquascapes(pagination: Pagination!, userId: Int, random: Boolean): AquascapesResult!
    trendingAquascapes(pagination: Pagination!): [Aquascape!]!
    featuredAquascape: Aquascape
    aquascape(id: Int!): Aquascape
}

type Mutation {
    createAquascape(title: String!): Aquascape!
}
